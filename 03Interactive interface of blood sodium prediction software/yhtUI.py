# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import os
from ui_mainwindow import Ui_MainWindow

import tensorflow as tf
import pandas as pd
import numpy as np
from numpy import *

from PyQt5.QtCore import QThread, pyqtSignal
from PyQt5.QtWidgets import QFileDialog, QApplication, QWidget, QPushButton, QMessageBox, QLineEdit, QMainWindow
from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtGui import QIcon
from PyQt5.QtGui import QPixmap

imgfile_path = r'D:\PycharmProjects\pythonProject5\yht\1.png'   # 按指定路径找到图片


# 这边的第一个参数，新建的时候是什么，就选什么
# 新建一个class是为了后面方便写按钮方法和绑定

class UtilWindowUI(QMainWindow, Ui_MainWindow):
    def __init__(self):
        super(UtilWindowUI, self).__init__()
        self.setupUi(self)
        pixmap = QPixmap(imgfile_path)  # 按指定路径找到图片
        self.label_2.setPixmap(pixmap)  # 在label上显示图片
        self.label_2.setScaledContents(True)  # 让图片自适应label大小

        self.pushButton.clicked.connect(lambda: self.pred(self.lineEdit.text(), self.lineEdit_2.text()))



    def pred(self,colloid1, crystalloid):  # 输入输液量进模型
        model = tf.keras.models.load_model('02quan.h5')  # 模型
        mean = array([1.39798246e+02, 1.40326311e+02, 5.95921112e-01, 6.52947109e+01,
                      1.54561404e+02, 8.68397830e+01, 9.87424852e+01, 1.25637165e+02,
                      5.36484319e+01, 8.05921523e+01, 6.82115643e+01, 5.82120798e+02,
                      3.53476149e+01, 9.65744751e+01, 3.57489380e+01, 3.97130661e+00,
                      3.51913770e+00, 1.03891554e+02, 2.94400798e+01, 1.43336969e+00,
                      1.49272146e+02, 2.14006009e+02, 7.76162869e+00, 1.40222703e+02,
                      4.02874892e+00, 2.17066183e+00, 1.13659071e+03])
        std = array([4.43490765e+00, 6.34509045e+00, 4.90712890e-01, 1.58050331e+01,
                     1.06054564e+01, 6.64480925e+00, 2.56267445e+00, 1.05492375e+01,
                     6.82265160e+00, 1.01386708e+01, 3.43102516e+02, 1.34541627e+03,
                     4.96333228e+00, 2.08431513e+01, 2.65183352e+01, 4.34271029e+00,
                     1.35394527e+00, 6.47565489e+00, 5.14838553e+00, 1.24348474e+00,
                     8.46697939e+01, 1.28892048e+02, 1.44335284e+00, 5.28270280e+00,
                     5.45495039e-01, 5.25663476e-01, 1.36464264e+03])

        data3 = pd.read_csv(r'D:\PycharmProjects\pythonProject5\03Interactive interface of blood sodium prediction software\z5input14.csv')  # 包含表头
        a = data3[1:2]

        a['colloid_bolus'] = int(colloid1)  # 赋值进去
        a['crystalloid_bolus'] = int(crystalloid)

        test_crystalloid = data3['crystalloid_bolus']
        a_datain = a.drop(
            labels=['subject_id', 'hadm_id', 'stay_id', 'intime', 'charttime_first', 'albumin', 'charttime_na_high',
                    'charttime_last', 'outtime', 'na_last', 'dead'], axis=1, inplace=False)
        a_datain -= mean
        a_datain /= std
        a_pred = model.predict(a_datain, batch_size=32)
        x = float(a_pred[0,0])
        self.label_5.setText(str(x))





if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    widget = UtilWindowUI()
    widget.show()
    sys.exit(app.exec_())
